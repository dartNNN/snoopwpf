<!--
(c) Copyright Cory Plotts.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->
<controls:Inspector
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="Snoop.Controls.PropertyGrid2"
	xmlns:snoop="clr-namespace:Snoop"
	xmlns:controls="clr-namespace:Snoop.Controls"
	xmlns:snoopwpf="urn:snoopwpf"
	xmlns:infrastructure="clr-namespace:Snoop.Infrastructure"
	x:Name="PropertyGrid"
	MinHeight="0"
	MinWidth="0"
>
	<Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ValueEditors\EditorTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ContextMenu x:Key="PropertyMenu" Style="{x:Null}">
				<MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyInspector.DelveCommand}" CommandParameter="{Binding}">
					<MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Delve" />
					</MenuItem.Header>
				</MenuItem>
				<MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyInspector.DelveBindingCommand}" CommandParameter="{Binding}">
					<MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Delve Binding" />
					</MenuItem.Header>
				</MenuItem>
				<MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyInspector.DelveBindingExpressionCommand}" CommandParameter="{Binding}">
					<MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Delve BindingExpression" />
					</MenuItem.Header>
				</MenuItem>
				<MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyGrid2.ShowBindingErrorsCommand}" CommandParameter="{Binding}">
					<MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Display Binding Errors" />
					</MenuItem.Header>
				</MenuItem>
				<MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyGrid2.ClearCommand}" CommandParameter="{Binding}">
					<MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Clear/Reset" />
					</MenuItem.Header>
				</MenuItem>
                <MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyInspector.CopyResourceNameCommand}" CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Copy Resource Name" />
                    </MenuItem.Header>
                </MenuItem>
				<MenuItem Style="{x:Null}" Command="{x:Static controls:PropertyInspector.CopyXamlCommand}" CommandParameter="{Binding}">
					<MenuItem.Header>
                        <Label Style="{x:Null}" Margin="0" Padding="0" Content="Copy XAML" />
					</MenuItem.Header>
				</MenuItem>
			</ContextMenu>

			<Style TargetType="{x:Type GridViewColumnHeader}">
				<Setter Property="Command" Value="{x:Static controls:PropertyGrid2.SortCommand}"/>
			</Style>
			
			<ControlTemplate x:Key="BreakpointTemplate" TargetType="{x:Type CheckBox}">
				<Grid>
					<Image Name="Icon" Style="{x:Null}" Source="{DynamicResource noBreakpointDrawingImage}" Width="12" Height="12"/>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsChecked" Value="True">
						<Setter Property="Source" Value="{DynamicResource breakpointDrawingImage}" TargetName="Icon"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<DataTemplate x:Key="ValueSourceTemplate" DataType="infrastructure:PropertyInformation">
				<TextBlock Style="{x:Null}" Text="{Binding ValueSource.BaseValueSource}" Height="16">
					<TextBlock.ToolTip>
						<TextBlock Style="{x:Null}" Text="{Binding ValueSource.BaseValueSource}"/>
					</TextBlock.ToolTip>
				</TextBlock>
			</DataTemplate>
		</ResourceDictionary>
	</Grid.Resources>

	<Grid.RowDefinitions>
		<RowDefinition Height="*"/>
	</Grid.RowDefinitions>

	<ListView
		x:Name="ListView"
	    Style="{x:Null}"
		Grid.RowSpan="2"
		MinHeight="0"
		MinWidth="0"
		HorizontalContentAlignment="Stretch"
		ItemsSource="{Binding ElementName=PropertyGrid, Path=Properties}"
		SelectedItem="{Binding ElementName=PropertyGrid, Path=Selection, Mode=TwoWay}"
		IsSynchronizedWithCurrentItem="True"
        AlternationCount="2"
	>
		<!-- cplotts note: -->
		<!-- does turning virtualization off actually improve performance? let's play with this later. -->
		<!--
		<ListView.ItemsPanel>
			<ItemsPanelTemplate>
				<StackPanel/>
			</ItemsPanelTemplate>
		</ListView.ItemsPanel>
		-->

		<ListView.ItemContainerStyle>
			<Style TargetType="{x:Type ListViewItem}">
				<Setter Property="ContextMenu" Value="{StaticResource PropertyMenu}"/>
				<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
				<Style.Triggers>

                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#FFEAEAEA" />
                    </Trigger>
                    
                    <DataTrigger Binding="{Binding IsLocallySet}" Value="False">
						<Setter Property="Foreground" Value="Gray"/>
					</DataTrigger>
					<!--<DataTrigger Binding="{Binding IsOdd}" Value="False">
						<Setter Property="Background" Value="#FFEAEAEA"/>
					</DataTrigger>-->
					<DataTrigger Binding="{Binding IsExpression}" Value="True">
						<Setter Property="Background" Value="LightGreen"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding IsAnimated}" Value="True">
						<Setter Property="Background" Value="LightSalmon"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding IsInvalidBinding}" Value="True">
						<Setter Property="Background" Value="Red"/>
						<Setter Property="Foreground" Value="White"/>
					</DataTrigger>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="Background" Value="LightGray"/>
					</Trigger>
					<DataTrigger Binding="{Binding HasChangedRecently}" Value="True">
						<Setter Property="Background" Value="Yellow"/>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ListView.ItemContainerStyle>
		<ListView.View>
			<GridView>
				<GridViewColumn Width="25">
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="infrastructure:PropertyInformation">
							<CheckBox Style="{x:Null}" IsChecked="{Binding BreakOnChange}" Template="{StaticResource BreakpointTemplate}">
								<CheckBox.ToolTip>
									<TextBlock Style="{x:Null}" Text="Click here to toggle a debug breakpoint on and off."/>
								</CheckBox.ToolTip>
							</CheckBox>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>

				<GridViewColumn Width="200">
					<GridViewColumn.Header>
						<TextBlock Style="{x:Null}" Text="Name">
							<TextBlock.ToolTip>
								<TextBlock Style="{x:Null}" Text="The name of the property"/>
							</TextBlock.ToolTip>
						</TextBlock>
					</GridViewColumn.Header>
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="infrastructure:PropertyInformation">
							<TextBlock Style="{x:Null}" Text="{Binding DisplayName}" Height="15" MouseLeftButtonDown="HandleNameClick">
								<TextBlock.ToolTip>
									<TextBlock Style="{x:Null}" Text="{Binding DisplayName}"/>
								</TextBlock.ToolTip>
							</TextBlock>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>

				<GridViewColumn Width="250" CellTemplateSelector="{StaticResource EditorSelector}">
					<GridViewColumn.Header>
						<TextBlock Style="{x:Null}" Text="Value">
							<TextBlock.ToolTip>
								<TextBlock Style="{x:Null}" Text="The value of the property"/>
							</TextBlock.ToolTip>
						</TextBlock>
					</GridViewColumn.Header>
				</GridViewColumn>

				<GridViewColumn Width="143">
					<GridViewColumn.Header>
						<TextBlock Style="{x:Null}" Text="Value Source">
							<TextBlock.ToolTip>
								<StackPanel>
									<TextBlock Style="{x:Null}" Text="This is the value source of the property,"/>
									<TextBlock Style="{x:Null}" Text="i.e. from where the property gets its value."/>
								</StackPanel>
							</TextBlock.ToolTip>
						</TextBlock>
					</GridViewColumn.Header>
					<GridViewColumn.CellTemplate>
						<DataTemplate>
							<ContentControl x:Name="ContentHost" Style="{x:Null}" Content="{Binding}" ContentTemplate="{StaticResource ValueSourceTemplate}"/>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>

				<GridViewColumn Width="200">
					<GridViewColumn.Header>
						<TextBlock Style="{x:Null}" Text="Binding Errors">
							<TextBlock.ToolTip>
								<StackPanel>
									<TextBlock Style="{x:Null}" Text="This column gives additional info on any binding errors."/>
									<TextBlock Style="{x:Null}" Text="Note: the row for any property with binding errors will"/>
									<TextBlock Style="{x:Null}" Text="have a red background."/>
								</StackPanel>
							</TextBlock.ToolTip>
						</TextBlock>
					</GridViewColumn.Header>
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="infrastructure:PropertyInformation">
							<TextBlock Style="{x:Null}" Text="{Binding BindingError}" Height="15">
								<TextBlock.ToolTip>
									<TextBlock Style="{x:Null}" Text="{Binding BindingError}"/>
								</TextBlock.ToolTip>
							</TextBlock>
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</GridViewColumn>
			</GridView>
		</ListView.View>
	</ListView>
</controls:Inspector>